{
    "sourceFile": "functions/utilities.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1693369868179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693371339439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,76 @@\n-module.exports = {};\r\n+const authorizeUser = async (authorizationHeader, firebaseAuth) => {\r\n+    if (!authorizationHeader) {\r\n+      // eslint-disable-next-line no-throw-literal\r\n+      throw \"no authorization provided!\";\r\n+    }\r\n+  \r\n+    const token = authorizationHeader.split(\" \")[1];\r\n+  \r\n+    try {\r\n+      const decodedToken = await firebaseAuth.verifyIdToken(token);\r\n+  \r\n+      return decodedToken;\r\n+    } catch (error) {\r\n+      throw error;\r\n+    }\r\n+  };\r\n+  \r\n+  const validateRecipePostPut = (newRecipe) => {\r\n+    let missingFields = \"\";\r\n+  \r\n+    if (!newRecipe) {\r\n+      missingFields += \"recipe\";\r\n+  \r\n+      return missingFields;\r\n+    }\r\n+  \r\n+    if (!newRecipe.name) {\r\n+      missingFields += \"name\";\r\n+    }\r\n+  \r\n+    if (!newRecipe.category) {\r\n+      missingFields += \"category\";\r\n+    }\r\n+  \r\n+    if (!newRecipe.directions) {\r\n+      missingFields += \"directions\";\r\n+    }\r\n+  \r\n+    if (newRecipe.isPublished !== true && newRecipe.isPublished !== false) {\r\n+      missingFields += \"isPublished\";\r\n+    }\r\n+  \r\n+    if (!newRecipe.publishDate) {\r\n+      missingFields += \"publishDate\";\r\n+    }\r\n+  \r\n+    if (!newRecipe.ingredients || newRecipe.ingredients.length === 0) {\r\n+      missingFields += \"ingredients\";\r\n+    }\r\n+  \r\n+    if (!newRecipe.imageUrl) {\r\n+      missingFields += \"imageUrl\";\r\n+    }\r\n+  \r\n+    return missingFields;\r\n+  };\r\n+  \r\n+  const sanitizeRecipePostPut = (newRecipe) => {\r\n+    const recipe = {};\r\n+  \r\n+    recipe.name = newRecipe.name;\r\n+    recipe.category = newRecipe.category;\r\n+    recipe.directions = newRecipe.directions;\r\n+    recipe.publishDate = new Date(newRecipe.publishDate * 1000);\r\n+    recipe.isPublished = newRecipe.isPublished;\r\n+    recipe.ingredients = newRecipe.ingredients;\r\n+    recipe.imageUrl = newRecipe.imageUrl;\r\n+  \r\n+    return recipe;\r\n+  };\r\n+  \r\n+  module.exports = {\r\n+    authorizeUser,\r\n+    validateRecipePostPut,\r\n+    sanitizeRecipePostPut,\r\n+  };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693371450661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,76 @@\n const authorizeUser = async (authorizationHeader, firebaseAuth) => {\r\n-    if (!authorizationHeader) {\r\n-      // eslint-disable-next-line no-throw-literal\r\n-      throw \"no authorization provided!\";\r\n-    }\r\n-  \r\n-    const token = authorizationHeader.split(\" \")[1];\r\n-  \r\n-    try {\r\n-      const decodedToken = await firebaseAuth.verifyIdToken(token);\r\n-  \r\n-      return decodedToken;\r\n-    } catch (error) {\r\n-      throw error;\r\n-    }\r\n-  };\r\n-  \r\n-  const validateRecipePostPut = (newRecipe) => {\r\n-    let missingFields = \"\";\r\n-  \r\n-    if (!newRecipe) {\r\n-      missingFields += \"recipe\";\r\n-  \r\n-      return missingFields;\r\n-    }\r\n-  \r\n-    if (!newRecipe.name) {\r\n-      missingFields += \"name\";\r\n-    }\r\n-  \r\n-    if (!newRecipe.category) {\r\n-      missingFields += \"category\";\r\n-    }\r\n-  \r\n-    if (!newRecipe.directions) {\r\n-      missingFields += \"directions\";\r\n-    }\r\n-  \r\n-    if (newRecipe.isPublished !== true && newRecipe.isPublished !== false) {\r\n-      missingFields += \"isPublished\";\r\n-    }\r\n-  \r\n-    if (!newRecipe.publishDate) {\r\n-      missingFields += \"publishDate\";\r\n-    }\r\n-  \r\n-    if (!newRecipe.ingredients || newRecipe.ingredients.length === 0) {\r\n-      missingFields += \"ingredients\";\r\n-    }\r\n-  \r\n-    if (!newRecipe.imageUrl) {\r\n-      missingFields += \"imageUrl\";\r\n-    }\r\n-  \r\n+  if (!authorizationHeader) {\r\n+    // eslint-disable-next-line no-throw-literal\r\n+    throw \"no authorization provided!\";\r\n+  }\r\n+\r\n+  const token = authorizationHeader.split(\" \")[1];\r\n+\r\n+  try {\r\n+    const decodedToken = await firebaseAuth.verifyIdToken(token);\r\n+\r\n+    return decodedToken;\r\n+  } catch (error) {\r\n+    throw error;\r\n+  }\r\n+};\r\n+\r\n+const validateRecipePostPut = (newRecipe) => {\r\n+  let missingFields = \"\";\r\n+\r\n+  if (!newRecipe) {\r\n+    missingFields += \"recipe\";\r\n+\r\n\\ No newline at end of file\n     return missingFields;\r\n-  };\r\n-  \r\n-  const sanitizeRecipePostPut = (newRecipe) => {\r\n-    const recipe = {};\r\n-  \r\n-    recipe.name = newRecipe.name;\r\n-    recipe.category = newRecipe.category;\r\n-    recipe.directions = newRecipe.directions;\r\n-    recipe.publishDate = new Date(newRecipe.publishDate * 1000);\r\n-    recipe.isPublished = newRecipe.isPublished;\r\n-    recipe.ingredients = newRecipe.ingredients;\r\n-    recipe.imageUrl = newRecipe.imageUrl;\r\n-  \r\n-    return recipe;\r\n-  };\r\n-  \r\n-  module.exports = {\r\n-    authorizeUser,\r\n-    validateRecipePostPut,\r\n-    sanitizeRecipePostPut,\r\n-  };\n+  }\r\n+\r\n+  if (!newRecipe.name) {\r\n+    missingFields += \"name\";\r\n+  }\r\n+\r\n+  if (!newRecipe.category) {\r\n+    missingFields += \"category\";\r\n+  }\r\n+\r\n+  if (!newRecipe.directions) {\r\n+    missingFields += \"directions\";\r\n+  }\r\n+\r\n+  if (newRecipe.isPublished !== true && newRecipe.isPublished !== false) {\r\n+    missingFields += \"isPublished\";\r\n+  }\r\n+\r\n+  if (!newRecipe.publishDate) {\r\n+    missingFields += \"publishDate\";\r\n+  }\r\n+\r\n+  if (!newRecipe.ingredients || newRecipe.ingredients.length === 0) {\r\n+    missingFields += \"ingredients\";\r\n+  }\r\n+\r\n+  if (!newRecipe.imageUrl) {\r\n+    missingFields += \"imageUrl\";\r\n+  }\r\n+\r\n+  return missingFields;\r\n+};\r\n+\r\n+const sanitizeRecipePostPut = (newRecipe) => {\r\n+  const recipe = {};\r\n+\r\n+  recipe.name = newRecipe.name;\r\n+  recipe.category = newRecipe.category;\r\n+  recipe.directions = newRecipe.directions;\r\n+  recipe.publishDate = new Date(newRecipe.publishDate * 1000);\r\n+  recipe.isPublished = newRecipe.isPublished;\r\n+  recipe.ingredients = newRecipe.ingredients;\r\n+  recipe.imageUrl = newRecipe.imageUrl;\r\n+\r\n+  return recipe;\r\n+};\r\n+\r\n+module.exports = {\r\n+  authorizeUser,\r\n+  validateRecipePostPut,\r\n+  sanitizeRecipePostPut,\r\n+};\r\n"
                }
            ],
            "date": 1693369868179,
            "name": "Commit-0",
            "content": "module.exports = {};"
        }
    ]
}